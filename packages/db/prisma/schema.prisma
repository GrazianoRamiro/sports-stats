// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model League {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  logo         String?
  externalId   Int            @unique
  country      Country        @relation(fields: [countryId], references: [id])
  countryId    Int
  seasons      Season[]       @relation("LeagueSeasons")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  LeagueSeason LeagueSeason[]
}

model Country {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  code      String?
  flag      String?
  leagues   League[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Season {
  id           Int            @id @default(autoincrement())
  year         Int            @unique
  start        DateTime
  end          DateTime
  current      Boolean
  leagues      League[]       @relation("LeagueSeasons")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  LeagueSeason LeagueSeason[]
}

model LeagueSeason {
  league   League @relation(fields: [leagueId], references: [id])
  leagueId Int
  season   Season @relation(fields: [seasonId], references: [id])
  seasonId Int

  @@id([leagueId, seasonId])
}

model Team {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  code      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Player {
  id        Int      @id @default(autoincrement())
  name      String
  position  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
